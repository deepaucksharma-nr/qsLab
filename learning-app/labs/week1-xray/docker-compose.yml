version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: kafka-xray-zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-xray-broker
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
      - "9999:9999"  # JMX port
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: kafka
      # Enable detailed JMX metrics
      KAFKA_OPTS: >-
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Djava.rmi.server.hostname=kafka
        -Dcom.sun.management.jmxremote.rmi.port=9999
      # Metric reporter configurations
      KAFKA_METRIC_REPORTERS: "kafka.metrics.JmxReporter"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 1
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-xray-ui
    hostname: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_JMXPORT: 9999
      KAFKA_CLUSTERS_0_JMXSSL: "false"
    networks:
      - kafka-network

  jmxterm:
    image: openjdk:11-slim
    container_name: kafka-xray-jmxterm
    hostname: jmxterm
    depends_on:
      - kafka
    volumes:
      - ./jmxterm-1.0.4-uber.jar:/jmxterm.jar
    command: tail -f /dev/null
    networks:
      - kafka-network

  newrelic-infra:
    image: newrelic/infrastructure:latest
    container_name: kafka-xray-newrelic
    hostname: newrelic-infra
    depends_on:
      - kafka
    cap_add:
      - SYS_PTRACE
    network_mode: host
    pid: host
    privileged: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ./newrelic-infra.yml:/etc/newrelic-infra.yml
      - ./nri-kafka-config.yml:/etc/newrelic-infra/integrations.d/kafka-config.yml
    environment:
      NRIA_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY:-your_license_key_here}
      NRIA_DISPLAY_NAME: "Kafka-XRay-Lab"
      NRIA_CUSTOM_ATTRIBUTES: '{"environment":"lab","week":"1","purpose":"xray-vision"}'

volumes:
  kafka-data:

networks:
  kafka-network:
    driver: bridge