version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: week2-zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - week2-network

  broker:
    image: confluentinc/cp-kafka:7.5.0
    container_name: week2-broker
    hostname: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      # Enable delete.topic.enable for tombstone testing
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      # Reduce log segment size for faster tombstone generation
      KAFKA_LOG_SEGMENT_BYTES: 1048576
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 30000
    volumes:
      - week2-broker-data:/var/lib/kafka/data
    networks:
      - week2-network

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    container_name: week2-schema-registry
    hostname: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:9092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - week2-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: week2-kafka-ui
    depends_on:
      - broker
      - schema-registry
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: week2-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      KAFKA_CLUSTERS_0_JMXPORT: 9101
    networks:
      - week2-network

  # New Relic Infrastructure Agent with Kafka integration
  newrelic-infra:
    image: newrelic/infrastructure:latest
    container_name: week2-newrelic-infra
    cap_add:
      - SYS_PTRACE
    network_mode: host
    pid: host
    privileged: true
    environment:
      NRIA_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
      NRIA_DISPLAY_NAME: "Week2-Builder-Lab"
      NRIA_CUSTOM_ATTRIBUTES: '{"cluster":"week2-builder","purpose":"learning-lab","week":"2"}'
    volumes:
      - /:/host:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./configs:/etc/newrelic-infra/integrations.d
      - ./custom-integrations:/var/db/newrelic-infra/custom-integrations
    restart: unless-stopped

  # Tombstone data generator for exercises
  tombstone-generator:
    image: confluentinc/cp-kafka:7.5.0
    container_name: week2-tombstone-generator
    depends_on:
      - broker
    command: |
      bash -c "
        echo 'Waiting for Kafka to be ready...'
        cub kafka-ready -b broker:9092 1 40
        
        # Create topics for tombstone exercises
        kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 3 --replication-factor 1 --topic tombstone-test
        kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 3 --replication-factor 1 --topic user-events
        kafka-topics --create --if-not-exists --bootstrap-server broker:9092 --partitions 3 --replication-factor 1 --topic inventory-updates
        
        echo 'Topics created. Container will exit.'
      "
    networks:
      - week2-network

  # Development environment for building custom integrations
  dev-environment:
    image: golang:1.21-alpine
    container_name: week2-dev-env
    working_dir: /workspace
    volumes:
      - ./custom-integrations:/workspace
    command: tail -f /dev/null
    networks:
      - week2-network

volumes:
  week2-broker-data:
    driver: local

networks:
  week2-network:
    name: week2-builder-network
    driver: bridge